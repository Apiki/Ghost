@import "../assets/stylesheets/style.scss";


// Variables
// ----------------------------------------------------------------------------
$g-color-detail		: #f1f1f1;
$g-color-primary	: #4ecdc4;

$g-font-primary		: "source_sans_prolight";


// Placehold
// ----------------------------------------------------------------------------
%before {
	color: #555;
	font-size: 14px;
}

%code {
	background: #f1f1f1;
	border: 1px solid darken(#f1f1f1, 10%);
	border-radius: 3px;
	color: darken(#f1f1f1, 50%);
	font-size: 14px;
	font-weight: normal;
	padding: 2px 4px;
	white-space: nowrap;
}


// Fonts
// ----------------------------------------------------------------------------
@font-face {
    font-family: $g-font-primary;
    src: url("ghost/assets/fonts/sourcesanspro-light-webfont.eot");
    src: url("ghost/assets/fonts/sourcesanspro-light-webfont.eot?#iefix") format("embedded-opentype"),
         url("ghost/assets/fonts/sourcesanspro-light-webfont.woff2") format("woff2"),
         url("ghost/assets/fonts/sourcesanspro-light-webfont.woff") format("woff"),
         url("ghost/assets/fonts/sourcesanspro-light-webfont.ttf") format("truetype"),
         url("ghost/assets/fonts/sourcesanspro-light-webfont.svg#source_sans_prolight") format("svg");
    font-weight: normal;
    font-style: normal;
}


// Highlight
// ----------------------------------------------------------------------------
/* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript+scss&plugins=jsonp-highlight */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

code[class*="language-"],
pre[class*="language-"] {
	color: black;
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	direction: ltr;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
	text-shadow: none;
	background: #b3d4fc;
}

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
	text-shadow: none;
	background: #b3d4fc;
}

@media print {
	code[class*="language-"],
	pre[class*="language-"] {
		text-shadow: none;
	}
}

/* Code blocks */
pre[class*="language-"] {
	// overflow: auto;
	overflow: hidden;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #708090;
}

.token.punctuation {
	color: #999;
}

.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
	color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
	color: #a67f59;
	background: hsla(0, 0%, 100%, .5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
	color: #07a;
}

.token.function {
	color: #DD4A68;
}

.token.regex,
.token.important,
.token.variable {
	color: #e90;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}


// Basic
// ----------------------------------------------------------------------------
#g-content {
	margin: 0 auto;
	max-width: 700px;
	padding: 0 15px;

	> * {
		margin-top: 50px;

		&:first-child {
			margin-top: 0;
		}
	}
}


// Box
// ----------------------------------------------------------------------------
.g-box-code {
	background: $g-color-detail;
	border-left: 3px solid $g-color-primary;
	border-radius: 3px;
	margin-bottom: 30px;
	padding: 10px 15px;

	&:last-child {
		margin-bottom: 0;
	}

	pre {
		font-size: 0;
	}

	code {
		font-size: 12px;
		left: -200px;
		position: relative;
	}
}

.g-box-title,
.g-box-subtitle,
.g-box-info {
	font-family: $g-font-primary;
}

.g-box-title,
.g-box-subtitle {
	letter-spacing: 1px;
	margin-bottom: 0;
	text-transform: uppercase;
}

.g-box-title {
	position: relative;

	&:before {
		background: #eee;
		content: "";
		height: 1px;
		left: 0;
		position: absolute;
		right: 0;
		top: 50%;
	}

	span {
		background: #fff;
		padding-right: 20px;
		position: relative;
		z-index: 1;
	}
}

.g-box-subtitle {
	font-size: 20px;
}

.g-box-info {
	margin-bottom: 20px;

	code {
		@extend %code;
	}
}

// -- Box example
.g-box-example {
	padding-bottom: 15px;

	&.many {
		margin-left: -2px;

		> * {
			margin: 3px 2px;
		}
	}

	&.line > * {
		margin-top: 10px;

		&:first-child {
			margin-top: 0;
		}
	}

	br {
		display: block;
		margin: 2px 0;
	}

	code {
		@extend %code;
	}
}

.g-box-example > table {
	width: 100%;

	thead tr {
		border-bottom-width: 3px;
		font-family: $g-font-primary;

		&:hover {
			background: none;
		}
	}

	tr {
		@include transition(background);
		border-color: $g-color-detail;
		color: #555;
		font-size: 14px;

		&:hover {
			background: rgba($g-color-detail, .4);
		}
	}

	td:first-child,
	th:first-child {
		padding-left: 0;
		width: 180px;
	}
}


// Colors
// ----------------------------------------------------------------------------
@mixin g-color($class, $color) {
	@if $color == false {
		.g-line-color.color-#{$class} {
			display: none;
		}
	} @else {
		.g-line-color.color-#{$class} {
			.g-color {
				background: $color;
			}

			.g-color-hex:before {
				content: "#{$color}";
			}
		}
	}
}

.g-color {
	border-radius: 3px;
	box-shadow: 0 2px 0 0 rgba(#000, .2) inset;
	display: inline-block;
	height: 20px;
	width: 40px;
}

@include g-color(primary, $color-primary);
@include g-color(secondary, $color-secondary);
@include g-color(tertiary, $color-tertiary);
@include g-color(text, $color-text);
@include g-color(title, $color-title);
@include g-color(link, $color-link);
@include g-color(sucess, $color-sucess);
@include g-color(alert, $color-alert);
@include g-color(error, $color-error);
@include g-color(detail, $color-detail);
@include g-color(detail, $color-detail);
@include g-color(disabled, $color-disabled);


// Grid
// ----------------------------------------------------------------------------
@mixin g-grid($class, $variable) {
	@if $variable == false {
		.g-line-grid.g-#{$class} {
			display: none;
		}
	} @else {
		.g-line-grid.g-#{$class} .g-grid-size:before {
			content: "#{$variable}";
		}
	}
}

@include g-grid(container, $container);
@include g-grid(desktop, $desktop);
@include g-grid(tablet, $tablet);
@include g-grid(mobile, $mobile);
@include g-grid(content, $content);
@include g-grid(sidebar, $sidebar);
@include g-grid(col-margin, $col-margin);
@include g-grid(col-width, $col-width);
@include g-grid(padding, $padding);
@include g-grid(border-r, $border-r);


